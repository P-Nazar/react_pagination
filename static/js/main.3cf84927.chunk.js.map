{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","newPage","className","href","onClick","pages","i","push","renderPageNumbers","items","from","to","numbers","n","getNumbers","map","App","useState","setPerPage","page","setPage","countPage","min","length","id","value","onChange","event","newPerPage","parseInt","target","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"8KAOaA,EAA8B,SAAC,GAOtC,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,aAGIC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAmB,SAACC,GACxBL,EAAaK,IA2Bf,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBP,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAI,WAAMR,GACVS,QAAS,kBAAMJ,EAAiBL,EAAc,IAC9C,mBAAkC,IAAhBA,EAAoB,OAAS,QALjD,oBA3BoB,WAGxB,IAFA,IAAMU,EAAQ,GADgB,WAGrBC,GACPD,EAAME,KACJ,oBAEEL,UAAWI,IAAMX,EAAc,mBAAqB,YAFtD,SAIE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,kBAAMJ,EAAiBM,IAJlC,SAMGA,KATEA,KAHFA,EAAI,EAAGA,GAAKT,EAAYS,GAAK,EAAI,EAAjCA,GAkBT,OAAOD,EAgBJG,GACD,oBAAIN,UAAS,oBAAeP,IAAgBE,EAAa,GAAK,YAA9D,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAI,WAAMR,GACVS,QAAS,kBAAMJ,EAAiBL,EAAc,IAC9C,mBAAkC,IAAhBA,EAAoB,OAAS,QALjD,wBCtDFc,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQL,KAAKM,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBC,KAAI,SAAAF,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAiB,GAA/C,mBAAOvB,EAAP,KAAgBwB,EAAhB,KACA,EAAwBD,mBAAiB,GAAzC,mBAAOE,EAAP,KAAaC,EAAb,KAaMC,EAAY,EACfF,EAAO,GAAKzB,EAAU,EAAKI,KAAKwB,IAAIH,EAAOzB,EAASe,EAAMc,SAE7D,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWiB,EADX,mBAC0BE,EAAU,GADpC,cAC4CA,EAAU,GADtD,aAIA,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SAEE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAO/B,EACPgC,SA1BkB,SAACC,GAC3B,IAAMC,EAAaC,SAASF,EAAMG,OAAOL,MAAO,IAEhDP,EAAWU,GACXR,EAAQ,IAiBF,UASE,wBAAQK,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOM,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACET,MAAOgB,EAAMc,OACb7B,QAASA,EACTC,YAAawB,EACbvB,aAnDe,SAACK,GACpBmB,EAAQnB,MAqDN,6BACGQ,EAAMuB,OAAOb,EAAO,GAAKzB,EAASyB,EAAOzB,GAASqB,KACjD,SAACkB,GAAD,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YEnErBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.3cf84927.chunk.js","sourcesContent":["interface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePageChange = (newPage: number) => {\n    onPageChange(newPage);\n  };\n\n  const renderPageNumbers = () => {\n    const pages = [];\n\n    for (let i = 1; i <= totalPages; i += 1) {\n      pages.push(\n        <li\n          key={i}\n          className={i === currentPage ? 'page-item active' : 'page-item'}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${i}`}\n            onClick={() => handlePageChange(i)}\n          >\n            {i}\n          </a>\n        </li>,\n      );\n    }\n\n    return pages;\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          onClick={() => handlePageChange(currentPage - 1)}\n          ariaria-disabled={currentPage === 1 ? 'true' : 'false'}\n        >\n          «\n        </a>\n      </li>\n      {renderPageNumbers()}\n      <li className={`page-item ${currentPage !== totalPages ? '' : 'disabled'}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${currentPage}`}\n          onClick={() => handlePageChange(currentPage + 1)}\n          ariaria-disabled={currentPage === 1 ? 'true' : 'false'}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState<number>(5);\n  const [page, setPage] = useState<number>(1);\n\n  const onPageChange = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = parseInt(event.target.value, 10);\n\n    setPerPage(newPerPage);\n    setPage(1);\n  };\n\n  const countPage = [(\n    (page - 1) * perPage + 1), (Math.min(page * perPage, items.length))];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${countPage[0]} - ${countPage[1]} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          {}\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={\n              handlePerPageChange\n            }\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {items.slice((page - 1) * perPage, page * perPage).map(\n          (item) => (\n            <li key={item} data-cy=\"item\">\n              {item}\n            </li>\n          ),\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}